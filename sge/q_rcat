#!/bin/bash
#
#$ -S /bin/bash
#$ -cwd
#$ -V
#$ -N q_rcat
# stats to fit in verari nodes
#$ -l h_rt=12:00:00
#$ -l vf=900M
#$ -j y
#$ -m eas
#

#
# Slave-mode: triggered by ENV VAR passed through qsub with -v
#
if [ -n "$Q_TARGET_FILE" ]; then 
    Q_CAT=cat
    Q_ZIP=cat
    if [[ "$Q_TARGET_FILE" == *.gz ]]; then Q_CAT="zcat"; fi
    if [[ "$Q_OUTPUT_FILE" == *.gz ]]; then Q_ZIP="gzip -c "; fi
    echo "I'm a q_rcat slave:  $Q_CAT $Q_TARGET_FILE | $Q_CMD_STR | $Q_ZIP > $Q_OUTPUT_FILE"
    export TMP=/scratch/user/$USER/tmp; export TMPDIR=$TMP; export TEMP=$TMP; mkdir -p $TMP
    printenv
    echo "# $Q_CAT $Q_TARGET_FILE | $Q_CMD_STR | $Q_ZIP > $Q_OUTPUT_FILE"
    eval "$Q_CAT $Q_TARGET_FILE | $Q_CMD_STR | $Q_ZIP" > $Q_OUTPUT_FILE
    exit $?
fi

#
# error if no params
#
if [ ! -n "$*" ]; then 
  echo "ERROR: must provide file or directory (or several) as arguments."
  echo ""
  echo "USAGE: q_rcat ext_in cmd ext_out [file|directory] [other files/directories]"
  echo ""
  echo "Any directories listed will be recursively scanned with 'find' "
  echo "and any .ext_in files found will run through 'cmd' and stdout stored in file.ext_out. "
  echo ""
  echo "A qsub job will be launched for every target file listed or found, "
  echo "and they will be decompressed in parallel on the work nodes."
  echo ""
  echo "**INCLUDE THE . IN THE EXTENTIONS**"
  echo ""
  echo "EXAMPLE: fastq.gz decompesssion"
  echo "  q_rcat .fastq.gz zcat .fastq ./fastq_dir"
  echo "Will decompress all the .fastq.gz in the ./fastq directory (and recursively"
  echo "in subdirectories) placing the output in files with filename.fastq"
  echo "EXAMPLE: sed on a compressed file"
  echo "  q_rcat .in.gz \"zcat | sed -e 's/e/E/g' | gzip -c\"  .out.gz ./dir"

  exit 1 
fi

#
# parse args
#
export Q_TARGET_EXT="$1"
export Q_CMD_STR="$2"
export Q_OUTPUT_EXT="$3"
shift 3

if [ ! -e "$UABGRID_SCRATCH/logs" ]; then
  echo "Creating directory $UABGRID_SCRATCH/logs for job output logs"
  mkdir $UABGRID_SCRATCH/logs
fi 

echo Q_TARGET_EXT: ${Q_TARGET_EXT} 
echo Q_OUTPUT_EXT: ${Q_OUTPUT_EXT} 
echo "Preparing list of files to process..."
for targ in $*; do
    if [ -d "$targ" ]; then
	echo "==== Scanning $targ ==== "
	for file in $(find $targ -name "*$Q_TARGET_EXT" -type f -print 2>/dev/null); do
   	   # Obtain the full directory path to the file
	   Q_OUTPUT_FILE=`echo ${file} | sed "s/${Q_TARGET_EXT}\$/${Q_OUTPUT_EXT}/"`
	   filedir=$(readlink -f $file)

	   # qsub a job to decompress that file
	   echo -n "$filedir: "
  	   qsub -terse -M $USER@uab.edu \
	       -v Q_TARGET_FILE="$filedir" -v Q_CMD_STR="$Q_CMD_STR" -v Q_OUTPUT_FILE="$Q_OUTPUT_FILE" $0
        done
   else 
	# Obtain the full directory path to the file
        Q_OUTPUT_FILE=`echo ${targ} | sed "s/${Q_TARGET_EXT}\$/${Q_OUTPUT_EXT}/"`
	filedir=$(readlink -f $targ)

	# qsub a job to decompress that file
	echo -n "$filedir: "
 	qsub -terse -M $USER@uab.edu \
	    -v Q_TARGET_FILE="$filedir" -v Q_CMD_STR="$Q_CMD_STR" -v Q_OUTPUT_FILE="$Q_OUTPUT_FILE" $0
   fi	
done

